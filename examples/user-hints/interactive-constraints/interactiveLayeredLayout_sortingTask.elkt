/*******************************************************************************
 * Copyright (c) 2021-2022 Kiel University and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
/*
// elkex:category
Interactive > Layered

// elkex:label
Sorting task

// elkex:doc
This can only be used within an editor that configures two consecutive layout runs, e.g. KIELER, Keith
but not Elklive.
 
The interactiveLayout property allows to move nodes in diagram view that supports this (e.g. Klighd VSCode extension).
Internally it sets via a GraphVisitor all other necessary properties, such as interactive and interactive strategies
for the different phases.

This model was used as a sorting task. 

*/

// elkex:graph
interactiveLayout: true
elk.direction: RIGHT
// Task: Sort the nodes via layer and position constraints. Used in Keith
node A {
  layering.layerChoiceConstraint: 0
  crossingMinimization.positionChoiceConstraint: 0
  label "A"
}
node AA {
  layering.layerChoiceConstraint: 0
  crossingMinimization.positionChoiceConstraint: 1
  label "AA"
}
node AAA {
  layering.layerChoiceConstraint: 0
  crossingMinimization.positionChoiceConstraint: 2
  label "AAA"
}
node B {
  layering.layerChoiceConstraint: 1
  crossingMinimization.positionChoiceConstraint: 0
  label "B"
}
node BB {
  layering.layerChoiceConstraint: 1
  crossingMinimization.positionChoiceConstraint: 1
  label "BB"
}
node BBB {
  layering.layerChoiceConstraint: 1
  crossingMinimization.positionChoiceConstraint: 2
  label "BBB"
}
node C {
  layering.layerChoiceConstraint: 2
  crossingMinimization.positionChoiceConstraint: 0
  label "C"
}
node CC {
  layering.layerChoiceConstraint: 2
  crossingMinimization.positionChoiceConstraint: 1
  label "CC"
}
node CCC {
  layering.layerChoiceConstraint: 2
  crossingMinimization.positionChoiceConstraint: 2
  label "CCC"
}
edge AA -> B
edge AA -> BB
edge B -> A
edge B -> C
edge BB -> C
edge BB -> CC
edge BBB -> AAA
edge CCC -> AAA
edge AAA -> CC